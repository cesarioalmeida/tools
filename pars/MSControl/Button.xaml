<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    
                    xmlns:shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
                    xmlns:sfskin="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <sfskin:ResourceDictionaryProvider DictionaryName="Common" ThemeName="ParsLight"/>
        <sfskin:ResourceDictionaryProvider DictionaryName="Brushes" ThemeName="ParsLight"/>
    </ResourceDictionary.MergedDictionaries>

    <LinearGradientBrush x:Key="ButtonBorderBrush" MappingMode="Absolute" StartPoint="0,0" EndPoint="0,2">
        <LinearGradientBrush.RelativeTransform>
            <ScaleTransform ScaleY="-1" CenterY="0.5"/>
        </LinearGradientBrush.RelativeTransform>
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0.5" Color="{StaticResource SecondaryBorderGradient.Color}"/>
            <GradientStop Offset="1.0" Color="{StaticResource SecondaryBorder.Color}"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonBorderBrushHovered" MappingMode="Absolute" StartPoint="0,0" EndPoint="0,2">
        <LinearGradientBrush.RelativeTransform>
            <ScaleTransform ScaleY="-1" CenterY="0.5"/>
        </LinearGradientBrush.RelativeTransform>
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0.5" Color="{StaticResource SecondaryBorderHoveredGradient.Color}"/>
            <GradientStop Offset="1.0" Color="{StaticResource SecondaryBorderHovered.Color}"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <ControlTemplate x:Key="WPFButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border"                             
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{StaticResource ParsLight.CornerRadius4}"
                            
                            SnapsToDevicePixels="true"
                            >
            <ContentPresenter x:Name="contentPresenter" 
                                          Focusable="False"
                                          Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          RecognizesAccessKey="True">
                <ContentPresenter.Resources>
                    <Style BasedOn="{x:Null}" TargetType="{x:Type TextBlock}" />
                </ContentPresenter.Resources>
            </ContentPresenter>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                <Setter Property="MinHeight" Value="{StaticResource TouchMode.MinHeight}"/>
            </Trigger>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BorderAlt3}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="Default"/>
                    <Condition Property="IsFocused" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="border" Value="{StaticResource SecondaryBackgroundHovered}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BorderAlt3}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource SecondaryForegroundHovered}"/>
            </MultiTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="border" Value="{StaticResource SecondaryBackgroundHovered}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonBorderBrushHovered}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource SecondaryForegroundHovered}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="border" Value="{StaticResource SecondaryBackgroundSelected}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SecondaryBorderSelected}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource SecondaryForegroundSelected}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource SecondaryBackgroundDisabled}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SecondaryBorderDisabled}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource SecondaryForegroundDisabled}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="WPFButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" 
                Value="{x:Null}"/>
        <Setter Property="Background" 
                Value="{StaticResource SecondaryBackground}"/>
        <Setter Property="BorderThickness" 
                Value="{StaticResource ParsLight.BorderThickness2}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonBorderBrush}"/>
        <Setter Property="Foreground"
                Value="{StaticResource SecondaryForeground}"/>
        <Setter Property="FontFamily"
                Value="{StaticResource ParsLight.ThemeFontFamily}"/>
        <Setter Property="FontSize"
                Value="{StaticResource ParsLight.BodyTextStyle}"/>
        <Setter Property="FontWeight"
                Value="{StaticResource ParsLight.FontWeightNormal}"/>
        <Setter Property="HorizontalContentAlignment" 
                Value="Center"/>
        <Setter Property="VerticalContentAlignment" 
                Value="Center"/>
        <Setter Property="Template" Value="{StaticResource WPFButtonTemplate}"/>
        <Style.Triggers>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource KeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource WPFButtonStyle}" TargetType="{x:Type Button}"/>
    
    <Style x:Key="WPFRoundedButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" 
                Value="{x:Null}"/>
        <Setter Property="Background" 
                Value="{StaticResource SecondaryBackground}"/>
        <Setter Property="BorderThickness" 
                Value="{StaticResource ParsLight.BorderThickness1}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource SecondaryBorder}"/>
        <Setter Property="Foreground"
                Value="{StaticResource SecondaryForeground}"/>
        <Setter Property="FontFamily"
                Value="{StaticResource ParsLight.ThemeFontFamily}"/>
        <Setter Property="FontSize"
                Value="{StaticResource ParsLight.BodyTextStyle}"/>
        <Setter Property="FontWeight"
                Value="{StaticResource ParsLight.FontWeightNormal}"/>
        <Setter Property="HorizontalContentAlignment" 
                Value="Center"/>
        <Setter Property="VerticalContentAlignment" 
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse
                            x:Name="ellipse"
                            
                            Fill="{TemplateBinding Background}"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="{TemplateBinding BorderThickness}"                                 
                            />
                        <ContentPresenter x:Name="contentPresenter" 
                                          Focusable="False"
                                          Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          RecognizesAccessKey="True">
                            <ContentPresenter.Resources>
                                <Style BasedOn="{x:Null}" TargetType="{x:Type TextBlock}" />
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                            <Setter Property="MinHeight" Value="{StaticResource TouchMode.MinHeight}"/>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Stroke" TargetName="ellipse" Value="{StaticResource BorderAlt3}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="Default"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ellipse" Value="{StaticResource SecondaryBackgroundHovered}"/>
                            <Setter Property="Stroke" TargetName="ellipse" Value="{StaticResource BorderAlt3}"/>
                            <Setter Property="Foreground" Value="{StaticResource SecondaryForegroundHovered}"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="ellipse" Value="{StaticResource SecondaryBackgroundHovered}"/>
                            <Setter Property="Stroke" TargetName="ellipse" Value="{StaticResource SecondaryBorderHovered}"/>
                            <Setter Property="Foreground" Value="{StaticResource SecondaryForegroundHovered}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="ellipse" Value="{StaticResource SecondaryBackgroundSelected}"/>
                            <Setter Property="Stroke" TargetName="ellipse" Value="{StaticResource SecondaryBorderSelected}"/>
                            <Setter Property="Foreground" Value="{StaticResource SecondaryForegroundSelected}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="ellipse" Value="{StaticResource SecondaryBackgroundDisabled}"/>
                            <Setter Property="Stroke" TargetName="ellipse" Value="{StaticResource SecondaryBorderDisabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource SecondaryForegroundDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource CircleKeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
